                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.8 #9946 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module utilities
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _cpct_getRandom_glfsr16_u8
                             12 	.globl _cpct_getRandom_lcg_u8
                             13 	.globl _cpct_isAnyKeyPressed
                             14 	.globl _cpct_isKeyPressed
                             15 	.globl _cpct_scanKeyboard_f
                             16 	.globl _cpct_scanKeyboard
                             17 	.globl _cpct_memset
                             18 	.globl _g_clock
                             19 	.globl _g_clock_on
                             20 	.globl _u_wait_kp
                             21 	.globl _u_power_2
                             22 	.globl _u_wait_for_key
                             23 	.globl _u_wait
                             24 	.globl _u_get_width
                             25 	.globl _u_get_random
                             26 	.globl _u_get_xy
                             27 	.globl _u_map_char_to_key
                             28 	.globl _u_map_key_to_char
                             29 	.globl _u_get_delta
                             30 	.globl _u_bounds_delta_check
                             31 	.globl _u_bounds_check
                             32 	.globl _u_clear_input
                             33 	.globl _u_clock_interrupt
                             34 	.globl _u_reset_clock
                             35 	.globl _u_check_collide
                             36 	.globl _u_sort_hiscores
                             37 ;--------------------------------------------------------
                             38 ; special function registers
                             39 ;--------------------------------------------------------
                             40 ;--------------------------------------------------------
                             41 ; ram data
                             42 ;--------------------------------------------------------
                             43 	.area _DATA
   0000                      44 _g_clock_on::
   0000                      45 	.ds 1
   0001                      46 _u_clock_interrupt_count_1_315:
   0001                      47 	.ds 1
                             48 ;--------------------------------------------------------
                             49 ; ram data
                             50 ;--------------------------------------------------------
                             51 	.area _INITIALIZED
   0000                      52 _g_clock::
   0000                      53 	.ds 4
                             54 ;--------------------------------------------------------
                             55 ; absolute external ram data
                             56 ;--------------------------------------------------------
                             57 	.area _DABS (ABS)
                             58 ;--------------------------------------------------------
                             59 ; global & static initialisations
                             60 ;--------------------------------------------------------
                             61 	.area _HOME
                             62 	.area _GSINIT
                             63 	.area _GSFINAL
                             64 	.area _GSINIT
                             65 ;src/lib/utilities.c:276: static u8 count = 0;
   0000 FD 21r01r00   [14]   66 	ld	iy, #_u_clock_interrupt_count_1_315
   0004 FD 36 00 00   [19]   67 	ld	0 (iy), #0x00
                             68 ;--------------------------------------------------------
                             69 ; Home
                             70 ;--------------------------------------------------------
                             71 	.area _HOME
                             72 	.area _HOME
                             73 ;--------------------------------------------------------
                             74 ; code
                             75 ;--------------------------------------------------------
                             76 	.area _CODE
                             77 ;src/lib/utilities.c:28: void u_wait_kp(void) {
                             78 ;	---------------------------------
                             79 ; Function u_wait_kp
                             80 ; ---------------------------------
   0000                      81 _u_wait_kp::
                             82 ;src/lib/utilities.c:30: bool kp = false;
   0000 3E 00         [ 7]   83 	ld	a, #0x00
                             84 ;src/lib/utilities.c:31: while (!kp) {
   0002                      85 00101$:
   0002 CB 47         [ 8]   86 	bit	0, a
   0004 C0            [11]   87 	ret	NZ
                             88 ;src/lib/utilities.c:32: cpct_scanKeyboard();
   0005 CDr00r00      [17]   89 	call	_cpct_scanKeyboard
                             90 ;src/lib/utilities.c:33: kp = cpct_isAnyKeyPressed();
   0008 CDr00r00      [17]   91 	call	_cpct_isAnyKeyPressed
   000B AF            [ 4]   92 	xor	a, a
   000C BD            [ 4]   93 	cp	a, l
   000D 17            [ 4]   94 	rla
   000E 18 F2         [12]   95 	jr	00101$
                             96 ;src/lib/utilities.c:38: inline u8 u_power_2(const u8 pow) {
                             97 ;	---------------------------------
                             98 ; Function u_power_2
                             99 ; ---------------------------------
   0010                     100 _u_power_2::
                            101 ;src/lib/utilities.c:40: u8 result = 1;
                            102 ;src/lib/utilities.c:42: for (u8 i = 0; i < pow; i++)
   0010 01 01 00      [10]  103 	ld	bc,#0x0001
   0013                     104 00103$:
   0013 21 02 00      [10]  105 	ld	hl, #2
   0016 39            [11]  106 	add	hl, sp
   0017 78            [ 4]  107 	ld	a, b
   0018 96            [ 7]  108 	sub	a, (hl)
   0019 30 05         [12]  109 	jr	NC,00101$
                            110 ;src/lib/utilities.c:43: result *= 2;
   001B CB 21         [ 8]  111 	sla	c
                            112 ;src/lib/utilities.c:42: for (u8 i = 0; i < pow; i++)
   001D 04            [ 4]  113 	inc	b
   001E 18 F3         [12]  114 	jr	00103$
   0020                     115 00101$:
                            116 ;src/lib/utilities.c:45: return result;
   0020 69            [ 4]  117 	ld	l, c
   0021 C9            [10]  118 	ret
                            119 ;src/lib/utilities.c:50: void u_wait_for_key(cpct_keyID key) {
                            120 ;	---------------------------------
                            121 ; Function u_wait_for_key
                            122 ; ---------------------------------
   0022                     123 _u_wait_for_key::
                            124 ;src/lib/utilities.c:52: do
   0022                     125 00101$:
                            126 ;src/lib/utilities.c:53: cpct_scanKeyboard_f();
   0022 CDr00r00      [17]  127 	call	_cpct_scanKeyboard_f
                            128 ;src/lib/utilities.c:54: while(!cpct_isKeyPressed(key));
   0025 C1            [10]  129 	pop	bc
   0026 E1            [10]  130 	pop	hl
   0027 E5            [11]  131 	push	hl
   0028 C5            [11]  132 	push	bc
   0029 CDr00r00      [17]  133 	call	_cpct_isKeyPressed
   002C 7D            [ 4]  134 	ld	a, l
   002D B7            [ 4]  135 	or	a, a
   002E 28 F2         [12]  136 	jr	Z,00101$
                            137 ;src/lib/utilities.c:56: do
   0030                     138 00104$:
                            139 ;src/lib/utilities.c:57: cpct_scanKeyboard_f();
   0030 CDr00r00      [17]  140 	call	_cpct_scanKeyboard_f
                            141 ;src/lib/utilities.c:58: while(cpct_isKeyPressed(key));
   0033 C1            [10]  142 	pop	bc
   0034 E1            [10]  143 	pop	hl
   0035 E5            [11]  144 	push	hl
   0036 C5            [11]  145 	push	bc
   0037 CDr00r00      [17]  146 	call	_cpct_isKeyPressed
   003A 7D            [ 4]  147 	ld	a, l
   003B B7            [ 4]  148 	or	a, a
   003C 20 F2         [12]  149 	jr	NZ,00104$
   003E C9            [10]  150 	ret
                            151 ;src/lib/utilities.c:62: void u_wait(const u16 n) {
                            152 ;	---------------------------------
                            153 ; Function u_wait
                            154 ; ---------------------------------
   003F                     155 _u_wait::
                            156 ;src/lib/utilities.c:64: for (u16 i = 0; i < n; i++)
   003F 01 00 00      [10]  157 	ld	bc, #0x0000
   0042                     158 00103$:
   0042 21 02 00      [10]  159 	ld	hl, #2
   0045 39            [11]  160 	add	hl, sp
   0046 79            [ 4]  161 	ld	a, c
   0047 96            [ 7]  162 	sub	a, (hl)
   0048 78            [ 4]  163 	ld	a, b
   0049 23            [ 6]  164 	inc	hl
   004A 9E            [ 7]  165 	sbc	a, (hl)
   004B D0            [11]  166 	ret	NC
                            167 ;src/lib/utilities.c:65: __asm__("NOP");
   004C 00            [ 4]  168 	NOP
                            169 ;src/lib/utilities.c:64: for (u16 i = 0; i < n; i++)
   004D 03            [ 6]  170 	inc	bc
   004E 18 F2         [12]  171 	jr	00103$
                            172 ;src/lib/utilities.c:69: u8 u_get_width(const u32 score) {
                            173 ;	---------------------------------
                            174 ; Function u_get_width
                            175 ; ---------------------------------
   0050                     176 _u_get_width::
   0050 DD E5         [15]  177 	push	ix
   0052 DD 21 00 00   [14]  178 	ld	ix,#0
   0056 DD 39         [15]  179 	add	ix,sp
   0058 3B            [ 6]  180 	dec	sp
                            181 ;src/lib/utilities.c:72: u32 num = score;
   0059 DD 4E 04      [19]  182 	ld	c, 4 (ix)
   005C DD 46 05      [19]  183 	ld	b, 5 (ix)
   005F DD 5E 06      [19]  184 	ld	e, 6 (ix)
   0062 DD 56 07      [19]  185 	ld	d, 7 (ix)
                            186 ;src/lib/utilities.c:74: do {
   0065 DD 36 FF 00   [19]  187 	ld	-1 (ix), #0x00
   0069                     188 00101$:
                            189 ;src/lib/utilities.c:75: num /= 10;
   0069 21 00 00      [10]  190 	ld	hl, #0x0000
   006C E5            [11]  191 	push	hl
   006D 21 0A 00      [10]  192 	ld	hl, #0x000a
   0070 E5            [11]  193 	push	hl
   0071 D5            [11]  194 	push	de
   0072 C5            [11]  195 	push	bc
   0073 CDr00r00      [17]  196 	call	__divulong
   0076 F1            [10]  197 	pop	af
   0077 F1            [10]  198 	pop	af
   0078 F1            [10]  199 	pop	af
   0079 F1            [10]  200 	pop	af
   007A 4D            [ 4]  201 	ld	c, l
   007B 44            [ 4]  202 	ld	b, h
                            203 ;src/lib/utilities.c:76: ++width;
   007C DD 34 FF      [23]  204 	inc	-1 (ix)
                            205 ;src/lib/utilities.c:77: } while (num != 0);
   007F 7A            [ 4]  206 	ld	a, d
   0080 B3            [ 4]  207 	or	a, e
   0081 B0            [ 4]  208 	or	a, b
   0082 B1            [ 4]  209 	or	a,c
   0083 20 E4         [12]  210 	jr	NZ,00101$
                            211 ;src/lib/utilities.c:79: return width;
   0085 DD 6E FF      [19]  212 	ld	l, -1 (ix)
   0088 33            [ 6]  213 	inc	sp
   0089 DD E1         [14]  214 	pop	ix
   008B C9            [10]  215 	ret
                            216 ;src/lib/utilities.c:83: u8 u_get_random(const u8 max) {
                            217 ;	---------------------------------
                            218 ; Function u_get_random
                            219 ; ---------------------------------
   008C                     220 _u_get_random::
                            221 ;src/lib/utilities.c:85: bool finished = false;
   008C 06 00         [ 7]  222 	ld	b, #0x00
                            223 ;src/lib/utilities.c:86: u8 num = max;
   008E 21 02 00      [10]  224 	ld	hl, #2+0
   0091 39            [11]  225 	add	hl, sp
   0092 4E            [ 7]  226 	ld	c, (hl)
                            227 ;src/lib/utilities.c:88: while (!finished) {
   0093                     228 00101$:
   0093 CB 40         [ 8]  229 	bit	0, b
   0095 20 13         [12]  230 	jr	NZ,00103$
                            231 ;src/lib/utilities.c:89: num = cpct_getRandom_lcg_u8(cpct_getRandom_glfsr16_u8());
   0097 CDr00r00      [17]  232 	call	_cpct_getRandom_glfsr16_u8
   009A CDr00r00      [17]  233 	call	_cpct_getRandom_lcg_u8
   009D 4D            [ 4]  234 	ld	c, l
                            235 ;src/lib/utilities.c:90: finished = num < max;
   009E 21 02 00      [10]  236 	ld	hl, #2
   00A1 39            [11]  237 	add	hl, sp
   00A2 79            [ 4]  238 	ld	a, c
   00A3 96            [ 7]  239 	sub	a, (hl)
   00A4 3E 00         [ 7]  240 	ld	a, #0x00
   00A6 17            [ 4]  241 	rla
   00A7 47            [ 4]  242 	ld	b, a
   00A8 18 E9         [12]  243 	jr	00101$
   00AA                     244 00103$:
                            245 ;src/lib/utilities.c:93: return num;
   00AA 69            [ 4]  246 	ld	l, c
   00AB C9            [10]  247 	ret
                            248 ;src/lib/utilities.c:97: inline u16 u_get_xy(const i16 x, const i16 y) {
                            249 ;	---------------------------------
                            250 ; Function u_get_xy
                            251 ; ---------------------------------
   00AC                     252 _u_get_xy::
                            253 ;src/lib/utilities.c:99: return x + (y * GRID_U_W);
   00AC 21 04 00      [10]  254 	ld	hl, #4
   00AF 39            [11]  255 	add	hl, sp
   00B0 4E            [ 7]  256 	ld	c, (hl)
   00B1 23            [ 6]  257 	inc	hl
   00B2 46            [ 7]  258 	ld	b, (hl)
   00B3 69            [ 4]  259 	ld	l, c
   00B4 60            [ 4]  260 	ld	h, b
   00B5 29            [11]  261 	add	hl, hl
   00B6 09            [11]  262 	add	hl, bc
   00B7 29            [11]  263 	add	hl, hl
   00B8 29            [11]  264 	add	hl, hl
   00B9 29            [11]  265 	add	hl, hl
   00BA 09            [11]  266 	add	hl, bc
   00BB 4D            [ 4]  267 	ld	c, l
   00BC 44            [ 4]  268 	ld	b, h
   00BD 21 02 00      [10]  269 	ld	hl, #2
   00C0 39            [11]  270 	add	hl, sp
   00C1 7E            [ 7]  271 	ld	a, (hl)
   00C2 23            [ 6]  272 	inc	hl
   00C3 66            [ 7]  273 	ld	h, (hl)
   00C4 6F            [ 4]  274 	ld	l, a
   00C5 09            [11]  275 	add	hl, bc
   00C6 C9            [10]  276 	ret
                            277 ;src/lib/utilities.c:103: cpct_keyID u_map_char_to_key(const char key) {
                            278 ;	---------------------------------
                            279 ; Function u_map_char_to_key
                            280 ; ---------------------------------
   00C7                     281 _u_map_char_to_key::
                            282 ;src/lib/utilities.c:105: switch (key) {
   00C7 FD 21 02 00   [14]  283 	ld	iy, #2
   00CB FD 39         [15]  284 	add	iy, sp
   00CD FD 7E 00      [19]  285 	ld	a, 0 (iy)
   00D0 D6 41         [ 7]  286 	sub	a, #0x41
   00D2 DArA2r01      [10]  287 	jp	C, 00127$
   00D5 3E 5A         [ 7]  288 	ld	a, #0x5a
   00D7 FD 96 00      [19]  289 	sub	a, 0 (iy)
   00DA DArA2r01      [10]  290 	jp	C, 00127$
   00DD FD 7E 00      [19]  291 	ld	a, 0 (iy)
   00E0 C6 BF         [ 7]  292 	add	a, #0xbf
   00E2 4F            [ 4]  293 	ld	c, a
   00E3 06 00         [ 7]  294 	ld	b, #0x00
   00E5 21rECr00      [10]  295 	ld	hl, #00139$
   00E8 09            [11]  296 	add	hl, bc
   00E9 09            [11]  297 	add	hl, bc
   00EA 09            [11]  298 	add	hl, bc
   00EB E9            [ 4]  299 	jp	(hl)
   00EC                     300 00139$:
   00EC C3r3Ar01      [10]  301 	jp	00101$
   00EF C3r3Er01      [10]  302 	jp	00102$
   00F2 C3r42r01      [10]  303 	jp	00103$
   00F5 C3r46r01      [10]  304 	jp	00104$
   00F8 C3r4Ar01      [10]  305 	jp	00105$
   00FB C3r4Er01      [10]  306 	jp	00106$
   00FE C3r52r01      [10]  307 	jp	00107$
   0101 C3r56r01      [10]  308 	jp	00108$
   0104 C3r5Ar01      [10]  309 	jp	00109$
   0107 C3r5Er01      [10]  310 	jp	00110$
   010A C3r62r01      [10]  311 	jp	00111$
   010D C3r66r01      [10]  312 	jp	00112$
   0110 C3r6Ar01      [10]  313 	jp	00113$
   0113 C3r6Er01      [10]  314 	jp	00114$
   0116 C3r72r01      [10]  315 	jp	00115$
   0119 C3r76r01      [10]  316 	jp	00116$
   011C C3r7Ar01      [10]  317 	jp	00117$
   011F C3r7Er01      [10]  318 	jp	00118$
   0122 C3r82r01      [10]  319 	jp	00119$
   0125 C3r86r01      [10]  320 	jp	00120$
   0128 C3r8Ar01      [10]  321 	jp	00121$
   012B C3r8Er01      [10]  322 	jp	00122$
   012E C3r92r01      [10]  323 	jp	00123$
   0131 C3r96r01      [10]  324 	jp	00124$
   0134 C3r9Ar01      [10]  325 	jp	00125$
   0137 C3r9Er01      [10]  326 	jp	00126$
                            327 ;src/lib/utilities.c:106: case 'A':
   013A                     328 00101$:
                            329 ;src/lib/utilities.c:107: return Key_A;
   013A 21 08 20      [10]  330 	ld	hl, #0x2008
   013D C9            [10]  331 	ret
                            332 ;src/lib/utilities.c:108: case 'B':
   013E                     333 00102$:
                            334 ;src/lib/utilities.c:109: return Key_B;
   013E 21 06 40      [10]  335 	ld	hl, #0x4006
   0141 C9            [10]  336 	ret
                            337 ;src/lib/utilities.c:110: case 'C':
   0142                     338 00103$:
                            339 ;src/lib/utilities.c:111: return Key_C;
   0142 21 07 40      [10]  340 	ld	hl, #0x4007
   0145 C9            [10]  341 	ret
                            342 ;src/lib/utilities.c:112: case 'D':
   0146                     343 00104$:
                            344 ;src/lib/utilities.c:113: return Key_D;
   0146 21 07 20      [10]  345 	ld	hl, #0x2007
   0149 C9            [10]  346 	ret
                            347 ;src/lib/utilities.c:114: case 'E':
   014A                     348 00105$:
                            349 ;src/lib/utilities.c:115: return Key_E;
   014A 21 07 04      [10]  350 	ld	hl, #0x0407
   014D C9            [10]  351 	ret
                            352 ;src/lib/utilities.c:116: case 'F':
   014E                     353 00106$:
                            354 ;src/lib/utilities.c:117: return Key_F;
   014E 21 06 20      [10]  355 	ld	hl, #0x2006
   0151 C9            [10]  356 	ret
                            357 ;src/lib/utilities.c:118: case 'G':
   0152                     358 00107$:
                            359 ;src/lib/utilities.c:119: return Key_G;
   0152 21 06 10      [10]  360 	ld	hl, #0x1006
   0155 C9            [10]  361 	ret
                            362 ;src/lib/utilities.c:120: case 'H':
   0156                     363 00108$:
                            364 ;src/lib/utilities.c:121: return Key_H;
   0156 21 05 10      [10]  365 	ld	hl, #0x1005
   0159 C9            [10]  366 	ret
                            367 ;src/lib/utilities.c:122: case 'I':
   015A                     368 00109$:
                            369 ;src/lib/utilities.c:123: return Key_I;
   015A 21 04 08      [10]  370 	ld	hl, #0x0804
   015D C9            [10]  371 	ret
                            372 ;src/lib/utilities.c:124: case 'J':
   015E                     373 00110$:
                            374 ;src/lib/utilities.c:125: return Key_J;
   015E 21 05 20      [10]  375 	ld	hl, #0x2005
   0161 C9            [10]  376 	ret
                            377 ;src/lib/utilities.c:126: case 'K':
   0162                     378 00111$:
                            379 ;src/lib/utilities.c:127: return Key_K;
   0162 21 04 20      [10]  380 	ld	hl, #0x2004
   0165 C9            [10]  381 	ret
                            382 ;src/lib/utilities.c:128: case 'L':
   0166                     383 00112$:
                            384 ;src/lib/utilities.c:129: return Key_L;
   0166 21 04 10      [10]  385 	ld	hl, #0x1004
   0169 C9            [10]  386 	ret
                            387 ;src/lib/utilities.c:130: case 'M':
   016A                     388 00113$:
                            389 ;src/lib/utilities.c:131: return Key_M;
   016A 21 04 40      [10]  390 	ld	hl, #0x4004
   016D C9            [10]  391 	ret
                            392 ;src/lib/utilities.c:132: case 'N':
   016E                     393 00114$:
                            394 ;src/lib/utilities.c:133: return Key_N;
   016E 21 05 40      [10]  395 	ld	hl, #0x4005
   0171 C9            [10]  396 	ret
                            397 ;src/lib/utilities.c:134: case 'O':
   0172                     398 00115$:
                            399 ;src/lib/utilities.c:135: return Key_O;
   0172 21 04 04      [10]  400 	ld	hl, #0x0404
   0175 C9            [10]  401 	ret
                            402 ;src/lib/utilities.c:136: case 'P':
   0176                     403 00116$:
                            404 ;src/lib/utilities.c:137: return Key_P;
   0176 21 03 08      [10]  405 	ld	hl, #0x0803
   0179 C9            [10]  406 	ret
                            407 ;src/lib/utilities.c:138: case 'Q':
   017A                     408 00117$:
                            409 ;src/lib/utilities.c:139: return Key_Q;
   017A 21 08 08      [10]  410 	ld	hl, #0x0808
   017D C9            [10]  411 	ret
                            412 ;src/lib/utilities.c:140: case 'R':
   017E                     413 00118$:
                            414 ;src/lib/utilities.c:141: return Key_R;
   017E 21 06 04      [10]  415 	ld	hl, #0x0406
   0181 C9            [10]  416 	ret
                            417 ;src/lib/utilities.c:142: case 'S':
   0182                     418 00119$:
                            419 ;src/lib/utilities.c:143: return Key_S;
   0182 21 07 10      [10]  420 	ld	hl, #0x1007
   0185 C9            [10]  421 	ret
                            422 ;src/lib/utilities.c:144: case 'T':
   0186                     423 00120$:
                            424 ;src/lib/utilities.c:145: return Key_T;
   0186 21 06 08      [10]  425 	ld	hl, #0x0806
   0189 C9            [10]  426 	ret
                            427 ;src/lib/utilities.c:146: case 'U':
   018A                     428 00121$:
                            429 ;src/lib/utilities.c:147: return Key_U;
   018A 21 05 04      [10]  430 	ld	hl, #0x0405
   018D C9            [10]  431 	ret
                            432 ;src/lib/utilities.c:148: case 'V':
   018E                     433 00122$:
                            434 ;src/lib/utilities.c:149: return Key_V;
   018E 21 06 80      [10]  435 	ld	hl, #0x8006
   0191 C9            [10]  436 	ret
                            437 ;src/lib/utilities.c:150: case 'W':
   0192                     438 00123$:
                            439 ;src/lib/utilities.c:151: return Key_W;
   0192 21 07 08      [10]  440 	ld	hl, #0x0807
   0195 C9            [10]  441 	ret
                            442 ;src/lib/utilities.c:152: case 'X':
   0196                     443 00124$:
                            444 ;src/lib/utilities.c:153: return Key_X;
   0196 21 07 80      [10]  445 	ld	hl, #0x8007
   0199 C9            [10]  446 	ret
                            447 ;src/lib/utilities.c:154: case 'Y':
   019A                     448 00125$:
                            449 ;src/lib/utilities.c:155: return Key_Y;
   019A 21 05 08      [10]  450 	ld	hl, #0x0805
   019D C9            [10]  451 	ret
                            452 ;src/lib/utilities.c:156: case 'Z':
   019E                     453 00126$:
                            454 ;src/lib/utilities.c:157: return Key_Z;
   019E 21 08 80      [10]  455 	ld	hl, #0x8008
   01A1 C9            [10]  456 	ret
                            457 ;src/lib/utilities.c:158: default:
   01A2                     458 00127$:
                            459 ;src/lib/utilities.c:159: return Key_Space;
   01A2 21 05 80      [10]  460 	ld	hl, #0x8005
                            461 ;src/lib/utilities.c:160: }
   01A5 C9            [10]  462 	ret
                            463 ;src/lib/utilities.c:164: char u_map_key_to_char(const cpct_keyID key) {
                            464 ;	---------------------------------
                            465 ; Function u_map_key_to_char
                            466 ; ---------------------------------
   01A6                     467 _u_map_key_to_char::
   01A6 DD E5         [15]  468 	push	ix
   01A8 DD 21 00 00   [14]  469 	ld	ix,#0
   01AC DD 39         [15]  470 	add	ix,sp
                            471 ;src/lib/utilities.c:166: switch (key) {
   01AE DD 7E 04      [19]  472 	ld	a, 4 (ix)
   01B1 D6 06         [ 7]  473 	sub	a, #0x06
   01B3 20 08         [12]  474 	jr	NZ,00235$
   01B5 DD 7E 05      [19]  475 	ld	a, 5 (ix)
   01B8 D6 80         [ 7]  476 	sub	a, #0x80
   01BA CAr85r03      [10]  477 	jp	Z,00122$
   01BD                     478 00235$:
   01BD DD 7E 04      [19]  479 	ld	a, 4 (ix)
   01C0 D6 07         [ 7]  480 	sub	a, #0x07
   01C2 20 08         [12]  481 	jr	NZ,00236$
   01C4 DD 7E 05      [19]  482 	ld	a, 5 (ix)
   01C7 D6 80         [ 7]  483 	sub	a, #0x80
   01C9 CAr8Dr03      [10]  484 	jp	Z,00124$
   01CC                     485 00236$:
   01CC DD 7E 04      [19]  486 	ld	a, 4 (ix)
   01CF D6 08         [ 7]  487 	sub	a, #0x08
   01D1 20 08         [12]  488 	jr	NZ,00237$
   01D3 DD 7E 05      [19]  489 	ld	a, 5 (ix)
   01D6 D6 80         [ 7]  490 	sub	a, #0x80
   01D8 CAr95r03      [10]  491 	jp	Z,00126$
   01DB                     492 00237$:
   01DB DD 7E 04      [19]  493 	ld	a, 4 (ix)
   01DE D6 04         [ 7]  494 	sub	a, #0x04
   01E0 20 08         [12]  495 	jr	NZ,00238$
   01E2 DD 7E 05      [19]  496 	ld	a, 5 (ix)
   01E5 D6 04         [ 7]  497 	sub	a, #0x04
   01E7 CAr69r03      [10]  498 	jp	Z,00115$
   01EA                     499 00238$:
   01EA DD 7E 04      [19]  500 	ld	a, 4 (ix)
   01ED D6 05         [ 7]  501 	sub	a, #0x05
   01EF 20 08         [12]  502 	jr	NZ,00239$
   01F1 DD 7E 05      [19]  503 	ld	a, 5 (ix)
   01F4 D6 04         [ 7]  504 	sub	a, #0x04
   01F6 CAr81r03      [10]  505 	jp	Z,00121$
   01F9                     506 00239$:
   01F9 DD 7E 04      [19]  507 	ld	a, 4 (ix)
   01FC D6 06         [ 7]  508 	sub	a, #0x06
   01FE 20 08         [12]  509 	jr	NZ,00240$
   0200 DD 7E 05      [19]  510 	ld	a, 5 (ix)
   0203 D6 04         [ 7]  511 	sub	a, #0x04
   0205 CAr75r03      [10]  512 	jp	Z,00118$
   0208                     513 00240$:
   0208 DD 7E 04      [19]  514 	ld	a, 4 (ix)
   020B D6 07         [ 7]  515 	sub	a, #0x07
   020D 20 08         [12]  516 	jr	NZ,00241$
   020F DD 7E 05      [19]  517 	ld	a, 5 (ix)
   0212 D6 04         [ 7]  518 	sub	a, #0x04
   0214 CAr41r03      [10]  519 	jp	Z,00105$
   0217                     520 00241$:
   0217 DD 7E 04      [19]  521 	ld	a, 4 (ix)
   021A D6 03         [ 7]  522 	sub	a, #0x03
   021C 20 08         [12]  523 	jr	NZ,00242$
   021E DD 7E 05      [19]  524 	ld	a, 5 (ix)
   0221 D6 08         [ 7]  525 	sub	a, #0x08
   0223 CAr6Dr03      [10]  526 	jp	Z,00116$
   0226                     527 00242$:
   0226 DD 7E 04      [19]  528 	ld	a, 4 (ix)
   0229 D6 04         [ 7]  529 	sub	a, #0x04
   022B 20 08         [12]  530 	jr	NZ,00243$
   022D DD 7E 05      [19]  531 	ld	a, 5 (ix)
   0230 D6 08         [ 7]  532 	sub	a, #0x08
   0232 CAr51r03      [10]  533 	jp	Z,00109$
   0235                     534 00243$:
   0235 DD 7E 04      [19]  535 	ld	a, 4 (ix)
   0238 D6 05         [ 7]  536 	sub	a, #0x05
   023A 20 08         [12]  537 	jr	NZ,00244$
   023C DD 7E 05      [19]  538 	ld	a, 5 (ix)
   023F D6 08         [ 7]  539 	sub	a, #0x08
   0241 CAr91r03      [10]  540 	jp	Z,00125$
   0244                     541 00244$:
   0244 DD 7E 04      [19]  542 	ld	a, 4 (ix)
   0247 D6 06         [ 7]  543 	sub	a, #0x06
   0249 20 08         [12]  544 	jr	NZ,00245$
   024B DD 7E 05      [19]  545 	ld	a, 5 (ix)
   024E D6 08         [ 7]  546 	sub	a, #0x08
   0250 CAr7Dr03      [10]  547 	jp	Z,00120$
   0253                     548 00245$:
   0253 DD 7E 04      [19]  549 	ld	a, 4 (ix)
   0256 D6 07         [ 7]  550 	sub	a, #0x07
   0258 20 08         [12]  551 	jr	NZ,00246$
   025A DD 7E 05      [19]  552 	ld	a, 5 (ix)
   025D D6 08         [ 7]  553 	sub	a, #0x08
   025F CAr89r03      [10]  554 	jp	Z,00123$
   0262                     555 00246$:
   0262 DD 7E 04      [19]  556 	ld	a, 4 (ix)
   0265 D6 08         [ 7]  557 	sub	a, #0x08
   0267 20 08         [12]  558 	jr	NZ,00247$
   0269 DD 7E 05      [19]  559 	ld	a, 5 (ix)
   026C D6 08         [ 7]  560 	sub	a, #0x08
   026E CAr71r03      [10]  561 	jp	Z,00117$
   0271                     562 00247$:
   0271 DD 7E 04      [19]  563 	ld	a, 4 (ix)
   0274 D6 04         [ 7]  564 	sub	a, #0x04
   0276 20 08         [12]  565 	jr	NZ,00248$
   0278 DD 7E 05      [19]  566 	ld	a, 5 (ix)
   027B D6 10         [ 7]  567 	sub	a, #0x10
   027D CAr5Dr03      [10]  568 	jp	Z,00112$
   0280                     569 00248$:
   0280 DD 7E 04      [19]  570 	ld	a, 4 (ix)
   0283 D6 05         [ 7]  571 	sub	a, #0x05
   0285 20 08         [12]  572 	jr	NZ,00249$
   0287 DD 7E 05      [19]  573 	ld	a, 5 (ix)
   028A D6 10         [ 7]  574 	sub	a, #0x10
   028C CAr4Dr03      [10]  575 	jp	Z,00108$
   028F                     576 00249$:
   028F DD 7E 04      [19]  577 	ld	a, 4 (ix)
   0292 D6 06         [ 7]  578 	sub	a, #0x06
   0294 20 08         [12]  579 	jr	NZ,00250$
   0296 DD 7E 05      [19]  580 	ld	a, 5 (ix)
   0299 D6 10         [ 7]  581 	sub	a, #0x10
   029B CAr49r03      [10]  582 	jp	Z,00107$
   029E                     583 00250$:
   029E DD 7E 04      [19]  584 	ld	a, 4 (ix)
   02A1 D6 07         [ 7]  585 	sub	a, #0x07
   02A3 20 08         [12]  586 	jr	NZ,00251$
   02A5 DD 7E 05      [19]  587 	ld	a, 5 (ix)
   02A8 D6 10         [ 7]  588 	sub	a, #0x10
   02AA CAr79r03      [10]  589 	jp	Z,00119$
   02AD                     590 00251$:
   02AD DD 7E 04      [19]  591 	ld	a, 4 (ix)
   02B0 D6 04         [ 7]  592 	sub	a, #0x04
   02B2 20 08         [12]  593 	jr	NZ,00252$
   02B4 DD 7E 05      [19]  594 	ld	a, 5 (ix)
   02B7 D6 20         [ 7]  595 	sub	a, #0x20
   02B9 CAr59r03      [10]  596 	jp	Z,00111$
   02BC                     597 00252$:
   02BC DD 7E 04      [19]  598 	ld	a, 4 (ix)
   02BF D6 05         [ 7]  599 	sub	a, #0x05
   02C1 20 08         [12]  600 	jr	NZ,00253$
   02C3 DD 7E 05      [19]  601 	ld	a, 5 (ix)
   02C6 D6 20         [ 7]  602 	sub	a, #0x20
   02C8 CAr55r03      [10]  603 	jp	Z,00110$
   02CB                     604 00253$:
   02CB DD 7E 04      [19]  605 	ld	a, 4 (ix)
   02CE D6 06         [ 7]  606 	sub	a, #0x06
   02D0 20 07         [12]  607 	jr	NZ,00254$
   02D2 DD 7E 05      [19]  608 	ld	a, 5 (ix)
   02D5 D6 20         [ 7]  609 	sub	a, #0x20
   02D7 28 6C         [12]  610 	jr	Z,00106$
   02D9                     611 00254$:
   02D9 DD 7E 04      [19]  612 	ld	a, 4 (ix)
   02DC D6 07         [ 7]  613 	sub	a, #0x07
   02DE 20 07         [12]  614 	jr	NZ,00255$
   02E0 DD 7E 05      [19]  615 	ld	a, 5 (ix)
   02E3 D6 20         [ 7]  616 	sub	a, #0x20
   02E5 28 56         [12]  617 	jr	Z,00104$
   02E7                     618 00255$:
   02E7 DD 7E 04      [19]  619 	ld	a, 4 (ix)
   02EA D6 08         [ 7]  620 	sub	a, #0x08
   02EC 20 07         [12]  621 	jr	NZ,00256$
   02EE DD 7E 05      [19]  622 	ld	a, 5 (ix)
   02F1 D6 20         [ 7]  623 	sub	a, #0x20
   02F3 28 3B         [12]  624 	jr	Z,00101$
   02F5                     625 00256$:
   02F5 DD 7E 04      [19]  626 	ld	a, 4 (ix)
   02F8 D6 04         [ 7]  627 	sub	a, #0x04
   02FA 20 07         [12]  628 	jr	NZ,00257$
   02FC DD 7E 05      [19]  629 	ld	a, 5 (ix)
   02FF D6 40         [ 7]  630 	sub	a, #0x40
   0301 28 5E         [12]  631 	jr	Z,00113$
   0303                     632 00257$:
   0303 DD 7E 04      [19]  633 	ld	a, 4 (ix)
   0306 D6 05         [ 7]  634 	sub	a, #0x05
   0308 20 07         [12]  635 	jr	NZ,00258$
   030A DD 7E 05      [19]  636 	ld	a, 5 (ix)
   030D D6 40         [ 7]  637 	sub	a, #0x40
   030F 28 54         [12]  638 	jr	Z,00114$
   0311                     639 00258$:
   0311 DD 7E 04      [19]  640 	ld	a, 4 (ix)
   0314 D6 06         [ 7]  641 	sub	a, #0x06
   0316 20 07         [12]  642 	jr	NZ,00259$
   0318 DD 7E 05      [19]  643 	ld	a, 5 (ix)
   031B D6 40         [ 7]  644 	sub	a, #0x40
   031D 28 16         [12]  645 	jr	Z,00102$
   031F                     646 00259$:
   031F DD 7E 04      [19]  647 	ld	a, 4 (ix)
   0322 D6 07         [ 7]  648 	sub	a, #0x07
   0324 20 73         [12]  649 	jr	NZ,00127$
   0326 DD 7E 05      [19]  650 	ld	a, 5 (ix)
   0329 D6 40         [ 7]  651 	sub	a, #0x40
   032B 28 0C         [12]  652 	jr	Z,00103$
   032D C3r99r03      [10]  653 	jp	00127$
                            654 ;src/lib/utilities.c:167: case Key_A:
   0330                     655 00101$:
                            656 ;src/lib/utilities.c:168: return 'A';
   0330 2E 41         [ 7]  657 	ld	l, #0x41
   0332 C3r9Br03      [10]  658 	jp	00129$
                            659 ;src/lib/utilities.c:169: case Key_B:
   0335                     660 00102$:
                            661 ;src/lib/utilities.c:170: return 'B';
   0335 2E 42         [ 7]  662 	ld	l, #0x42
   0337 18 62         [12]  663 	jr	00129$
                            664 ;src/lib/utilities.c:171: case Key_C:
   0339                     665 00103$:
                            666 ;src/lib/utilities.c:172: return 'C';
   0339 2E 43         [ 7]  667 	ld	l, #0x43
   033B 18 5E         [12]  668 	jr	00129$
                            669 ;src/lib/utilities.c:173: case Key_D:
   033D                     670 00104$:
                            671 ;src/lib/utilities.c:174: return 'D';
   033D 2E 44         [ 7]  672 	ld	l, #0x44
   033F 18 5A         [12]  673 	jr	00129$
                            674 ;src/lib/utilities.c:175: case Key_E:
   0341                     675 00105$:
                            676 ;src/lib/utilities.c:176: return 'E';
   0341 2E 45         [ 7]  677 	ld	l, #0x45
   0343 18 56         [12]  678 	jr	00129$
                            679 ;src/lib/utilities.c:177: case Key_F:
   0345                     680 00106$:
                            681 ;src/lib/utilities.c:178: return 'F';
   0345 2E 46         [ 7]  682 	ld	l, #0x46
   0347 18 52         [12]  683 	jr	00129$
                            684 ;src/lib/utilities.c:179: case Key_G:
   0349                     685 00107$:
                            686 ;src/lib/utilities.c:180: return 'G';
   0349 2E 47         [ 7]  687 	ld	l, #0x47
   034B 18 4E         [12]  688 	jr	00129$
                            689 ;src/lib/utilities.c:181: case Key_H:
   034D                     690 00108$:
                            691 ;src/lib/utilities.c:182: return 'H';
   034D 2E 48         [ 7]  692 	ld	l, #0x48
   034F 18 4A         [12]  693 	jr	00129$
                            694 ;src/lib/utilities.c:183: case Key_I:
   0351                     695 00109$:
                            696 ;src/lib/utilities.c:184: return 'I';
   0351 2E 49         [ 7]  697 	ld	l, #0x49
   0353 18 46         [12]  698 	jr	00129$
                            699 ;src/lib/utilities.c:185: case Key_J:
   0355                     700 00110$:
                            701 ;src/lib/utilities.c:186: return 'J';
   0355 2E 4A         [ 7]  702 	ld	l, #0x4a
   0357 18 42         [12]  703 	jr	00129$
                            704 ;src/lib/utilities.c:187: case Key_K:
   0359                     705 00111$:
                            706 ;src/lib/utilities.c:188: return 'K';
   0359 2E 4B         [ 7]  707 	ld	l, #0x4b
   035B 18 3E         [12]  708 	jr	00129$
                            709 ;src/lib/utilities.c:189: case Key_L:
   035D                     710 00112$:
                            711 ;src/lib/utilities.c:190: return 'L';
   035D 2E 4C         [ 7]  712 	ld	l, #0x4c
   035F 18 3A         [12]  713 	jr	00129$
                            714 ;src/lib/utilities.c:191: case Key_M:
   0361                     715 00113$:
                            716 ;src/lib/utilities.c:192: return 'M';
   0361 2E 4D         [ 7]  717 	ld	l, #0x4d
   0363 18 36         [12]  718 	jr	00129$
                            719 ;src/lib/utilities.c:193: case Key_N:
   0365                     720 00114$:
                            721 ;src/lib/utilities.c:194: return 'N';
   0365 2E 4E         [ 7]  722 	ld	l, #0x4e
   0367 18 32         [12]  723 	jr	00129$
                            724 ;src/lib/utilities.c:195: case Key_O:
   0369                     725 00115$:
                            726 ;src/lib/utilities.c:196: return 'O';
   0369 2E 4F         [ 7]  727 	ld	l, #0x4f
   036B 18 2E         [12]  728 	jr	00129$
                            729 ;src/lib/utilities.c:197: case Key_P:
   036D                     730 00116$:
                            731 ;src/lib/utilities.c:198: return 'P';
   036D 2E 50         [ 7]  732 	ld	l, #0x50
   036F 18 2A         [12]  733 	jr	00129$
                            734 ;src/lib/utilities.c:199: case Key_Q:
   0371                     735 00117$:
                            736 ;src/lib/utilities.c:200: return 'Q';
   0371 2E 51         [ 7]  737 	ld	l, #0x51
   0373 18 26         [12]  738 	jr	00129$
                            739 ;src/lib/utilities.c:201: case Key_R:
   0375                     740 00118$:
                            741 ;src/lib/utilities.c:202: return 'R';
   0375 2E 52         [ 7]  742 	ld	l, #0x52
   0377 18 22         [12]  743 	jr	00129$
                            744 ;src/lib/utilities.c:203: case Key_S:
   0379                     745 00119$:
                            746 ;src/lib/utilities.c:204: return 'S';
   0379 2E 53         [ 7]  747 	ld	l, #0x53
   037B 18 1E         [12]  748 	jr	00129$
                            749 ;src/lib/utilities.c:205: case Key_T:
   037D                     750 00120$:
                            751 ;src/lib/utilities.c:206: return 'T';
   037D 2E 54         [ 7]  752 	ld	l, #0x54
   037F 18 1A         [12]  753 	jr	00129$
                            754 ;src/lib/utilities.c:207: case Key_U:
   0381                     755 00121$:
                            756 ;src/lib/utilities.c:208: return 'U';
   0381 2E 55         [ 7]  757 	ld	l, #0x55
   0383 18 16         [12]  758 	jr	00129$
                            759 ;src/lib/utilities.c:209: case Key_V:
   0385                     760 00122$:
                            761 ;src/lib/utilities.c:210: return 'V';
   0385 2E 56         [ 7]  762 	ld	l, #0x56
   0387 18 12         [12]  763 	jr	00129$
                            764 ;src/lib/utilities.c:211: case Key_W:
   0389                     765 00123$:
                            766 ;src/lib/utilities.c:212: return 'W';
   0389 2E 57         [ 7]  767 	ld	l, #0x57
   038B 18 0E         [12]  768 	jr	00129$
                            769 ;src/lib/utilities.c:213: case Key_X:
   038D                     770 00124$:
                            771 ;src/lib/utilities.c:214: return 'X';
   038D 2E 58         [ 7]  772 	ld	l, #0x58
   038F 18 0A         [12]  773 	jr	00129$
                            774 ;src/lib/utilities.c:215: case Key_Y:
   0391                     775 00125$:
                            776 ;src/lib/utilities.c:216: return 'Y';
   0391 2E 59         [ 7]  777 	ld	l, #0x59
   0393 18 06         [12]  778 	jr	00129$
                            779 ;src/lib/utilities.c:217: case Key_Z:
   0395                     780 00126$:
                            781 ;src/lib/utilities.c:218: return 'Z';
   0395 2E 5A         [ 7]  782 	ld	l, #0x5a
   0397 18 02         [12]  783 	jr	00129$
                            784 ;src/lib/utilities.c:219: default:
   0399                     785 00127$:
                            786 ;src/lib/utilities.c:220: return ' ';
   0399 2E 20         [ 7]  787 	ld	l, #0x20
                            788 ;src/lib/utilities.c:221: }
   039B                     789 00129$:
   039B DD E1         [14]  790 	pop	ix
   039D C9            [10]  791 	ret
                            792 ;src/lib/utilities.c:225: inline void u_get_delta(const dir_t dir, i8 *dx, i8 *dy) {
                            793 ;	---------------------------------
                            794 ; Function u_get_delta
                            795 ; ---------------------------------
   039E                     796 _u_get_delta::
   039E DD E5         [15]  797 	push	ix
   03A0 DD 21 00 00   [14]  798 	ld	ix,#0
   03A4 DD 39         [15]  799 	add	ix,sp
                            800 ;src/lib/utilities.c:229: *dx = (offsets[(int)dir][0]);
   03A6 DD 4E 05      [19]  801 	ld	c,5 (ix)
   03A9 DD 46 06      [19]  802 	ld	b,6 (ix)
   03AC 11rCAr03      [10]  803 	ld	de, #_u_get_delta_offsets_1_307+0
   03AF DD 6E 04      [19]  804 	ld	l, 4 (ix)
   03B2 DD 7E 04      [19]  805 	ld	a, 4 (ix)
   03B5 17            [ 4]  806 	rla
   03B6 9F            [ 4]  807 	sbc	a, a
   03B7 67            [ 4]  808 	ld	h, a
   03B8 29            [11]  809 	add	hl, hl
   03B9 19            [11]  810 	add	hl,de
   03BA EB            [ 4]  811 	ex	de,hl
   03BB 1A            [ 7]  812 	ld	a, (de)
   03BC 02            [ 7]  813 	ld	(bc), a
                            814 ;src/lib/utilities.c:230: *dy = (offsets[(int)dir][1]);
   03BD DD 4E 07      [19]  815 	ld	c,7 (ix)
   03C0 DD 46 08      [19]  816 	ld	b,8 (ix)
   03C3 EB            [ 4]  817 	ex	de,hl
   03C4 23            [ 6]  818 	inc	hl
   03C5 7E            [ 7]  819 	ld	a, (hl)
   03C6 02            [ 7]  820 	ld	(bc), a
                            821 ;src/lib/utilities.c:232: return;
   03C7 DD E1         [14]  822 	pop	ix
   03C9 C9            [10]  823 	ret
   03CA                     824 _u_get_delta_offsets_1_307:
   03CA 00                  825 	.db #0x00	;  0
   03CB FF                  826 	.db #0xff	; -1
   03CC 01                  827 	.db #0x01	;  1
   03CD 00                  828 	.db #0x00	;  0
   03CE 00                  829 	.db #0x00	;  0
   03CF 01                  830 	.db #0x01	;  1
   03D0 FF                  831 	.db #0xff	; -1
   03D1 00                  832 	.db #0x00	;  0
                            833 ;src/lib/utilities.c:236: inline bool u_bounds_delta_check(const i16 x, const i16 y, const i8 dx,
                            834 ;	---------------------------------
                            835 ; Function u_bounds_delta_check
                            836 ; ---------------------------------
   03D2                     837 _u_bounds_delta_check::
                            838 ;src/lib/utilities.c:239: if (x + dx >= GRID_U_W)
   03D2 FD 21 06 00   [14]  839 	ld	iy, #6
   03D6 FD 39         [15]  840 	add	iy, sp
   03D8 FD 4E 00      [19]  841 	ld	c, 0 (iy)
   03DB FD 7E 00      [19]  842 	ld	a, 0 (iy)
   03DE 17            [ 4]  843 	rla
   03DF 9F            [ 4]  844 	sbc	a, a
   03E0 47            [ 4]  845 	ld	b, a
   03E1 21 02 00      [10]  846 	ld	hl, #2
   03E4 39            [11]  847 	add	hl, sp
   03E5 7E            [ 7]  848 	ld	a, (hl)
   03E6 23            [ 6]  849 	inc	hl
   03E7 66            [ 7]  850 	ld	h, (hl)
   03E8 6F            [ 4]  851 	ld	l, a
   03E9 09            [11]  852 	add	hl, bc
   03EA 7D            [ 4]  853 	ld	a, l
   03EB D6 19         [ 7]  854 	sub	a, #0x19
   03ED 7C            [ 4]  855 	ld	a, h
   03EE 17            [ 4]  856 	rla
   03EF 3F            [ 4]  857 	ccf
   03F0 1F            [ 4]  858 	rra
   03F1 DE 80         [ 7]  859 	sbc	a, #0x80
   03F3 38 03         [12]  860 	jr	C,00102$
                            861 ;src/lib/utilities.c:240: return false;
   03F5 2E 00         [ 7]  862 	ld	l, #0x00
   03F7 C9            [10]  863 	ret
   03F8                     864 00102$:
                            865 ;src/lib/utilities.c:241: if (x + dx < 0)
   03F8 CB 7C         [ 8]  866 	bit	7, h
   03FA 28 03         [12]  867 	jr	Z,00104$
                            868 ;src/lib/utilities.c:242: return false;
   03FC 2E 00         [ 7]  869 	ld	l, #0x00
   03FE C9            [10]  870 	ret
   03FF                     871 00104$:
                            872 ;src/lib/utilities.c:243: if (y + dy >= GRID_U_H)
   03FF FD 21 07 00   [14]  873 	ld	iy, #7
   0403 FD 39         [15]  874 	add	iy, sp
   0405 FD 4E 00      [19]  875 	ld	c, 0 (iy)
   0408 FD 7E 00      [19]  876 	ld	a, 0 (iy)
   040B 17            [ 4]  877 	rla
   040C 9F            [ 4]  878 	sbc	a, a
   040D 47            [ 4]  879 	ld	b, a
   040E 21 04 00      [10]  880 	ld	hl, #4
   0411 39            [11]  881 	add	hl, sp
   0412 7E            [ 7]  882 	ld	a, (hl)
   0413 23            [ 6]  883 	inc	hl
   0414 66            [ 7]  884 	ld	h, (hl)
   0415 6F            [ 4]  885 	ld	l, a
   0416 09            [11]  886 	add	hl, bc
   0417 7D            [ 4]  887 	ld	a, l
   0418 D6 11         [ 7]  888 	sub	a, #0x11
   041A 7C            [ 4]  889 	ld	a, h
   041B 17            [ 4]  890 	rla
   041C 3F            [ 4]  891 	ccf
   041D 1F            [ 4]  892 	rra
   041E DE 80         [ 7]  893 	sbc	a, #0x80
   0420 38 03         [12]  894 	jr	C,00106$
                            895 ;src/lib/utilities.c:244: return false;
   0422 2E 00         [ 7]  896 	ld	l, #0x00
   0424 C9            [10]  897 	ret
   0425                     898 00106$:
                            899 ;src/lib/utilities.c:245: if (y + dy < 0)
   0425 CB 7C         [ 8]  900 	bit	7, h
   0427 28 03         [12]  901 	jr	Z,00108$
                            902 ;src/lib/utilities.c:246: return false;
   0429 2E 00         [ 7]  903 	ld	l, #0x00
   042B C9            [10]  904 	ret
   042C                     905 00108$:
                            906 ;src/lib/utilities.c:248: return true;
   042C 2E 01         [ 7]  907 	ld	l, #0x01
   042E C9            [10]  908 	ret
                            909 ;src/lib/utilities.c:252: inline bool u_bounds_check(const i16 x, const i16 y) {
                            910 ;	---------------------------------
                            911 ; Function u_bounds_check
                            912 ; ---------------------------------
   042F                     913 _u_bounds_check::
                            914 ;src/lib/utilities.c:254: if (x < 0)
   042F 21 03 00      [10]  915 	ld	hl, #2+1
   0432 39            [11]  916 	add	hl, sp
   0433 CB 7E         [12]  917 	bit	7, (hl)
   0435 28 03         [12]  918 	jr	Z,00102$
                            919 ;src/lib/utilities.c:255: return false;
   0437 2E 00         [ 7]  920 	ld	l, #0x00
   0439 C9            [10]  921 	ret
   043A                     922 00102$:
                            923 ;src/lib/utilities.c:256: if (x >= GRID_U_W)
   043A FD 21 02 00   [14]  924 	ld	iy, #2
   043E FD 39         [15]  925 	add	iy, sp
   0440 FD 7E 00      [19]  926 	ld	a, 0 (iy)
   0443 D6 19         [ 7]  927 	sub	a, #0x19
   0445 FD 7E 01      [19]  928 	ld	a, 1 (iy)
   0448 17            [ 4]  929 	rla
   0449 3F            [ 4]  930 	ccf
   044A 1F            [ 4]  931 	rra
   044B DE 80         [ 7]  932 	sbc	a, #0x80
   044D 38 03         [12]  933 	jr	C,00104$
                            934 ;src/lib/utilities.c:257: return false;
   044F 2E 00         [ 7]  935 	ld	l, #0x00
   0451 C9            [10]  936 	ret
   0452                     937 00104$:
                            938 ;src/lib/utilities.c:258: if (y >= GRID_U_H)
   0452 FD 21 04 00   [14]  939 	ld	iy, #4
   0456 FD 39         [15]  940 	add	iy, sp
   0458 FD 7E 00      [19]  941 	ld	a, 0 (iy)
   045B D6 11         [ 7]  942 	sub	a, #0x11
   045D FD 7E 01      [19]  943 	ld	a, 1 (iy)
   0460 17            [ 4]  944 	rla
   0461 3F            [ 4]  945 	ccf
   0462 1F            [ 4]  946 	rra
   0463 DE 80         [ 7]  947 	sbc	a, #0x80
   0465 38 03         [12]  948 	jr	C,00106$
                            949 ;src/lib/utilities.c:259: return false;
   0467 2E 00         [ 7]  950 	ld	l, #0x00
   0469 C9            [10]  951 	ret
   046A                     952 00106$:
                            953 ;src/lib/utilities.c:260: if (y < 0)
   046A 21 05 00      [10]  954 	ld	hl, #4+1
   046D 39            [11]  955 	add	hl, sp
   046E CB 7E         [12]  956 	bit	7, (hl)
   0470 28 03         [12]  957 	jr	Z,00108$
                            958 ;src/lib/utilities.c:261: return false;
   0472 2E 00         [ 7]  959 	ld	l, #0x00
   0474 C9            [10]  960 	ret
   0475                     961 00108$:
                            962 ;src/lib/utilities.c:263: return true;
   0475 2E 01         [ 7]  963 	ld	l, #0x01
   0477 C9            [10]  964 	ret
                            965 ;src/lib/utilities.c:267: void u_clear_input(void) {
                            966 ;	---------------------------------
                            967 ; Function u_clear_input
                            968 ; ---------------------------------
   0478                     969 _u_clear_input::
                            970 ;src/lib/utilities.c:269: cpct_memset(cpct_keyboardStatusBuffer, 0xff,
   0478 21 0A 00      [10]  971 	ld	hl, #0x000a
   047B E5            [11]  972 	push	hl
   047C 3E FF         [ 7]  973 	ld	a, #0xff
   047E F5            [11]  974 	push	af
   047F 33            [ 6]  975 	inc	sp
   0480 21r00r00      [10]  976 	ld	hl, #_cpct_keyboardStatusBuffer
   0483 E5            [11]  977 	push	hl
   0484 CDr00r00      [17]  978 	call	_cpct_memset
   0487 C9            [10]  979 	ret
                            980 ;src/lib/utilities.c:274: void u_clock_interrupt(void) {
                            981 ;	---------------------------------
                            982 ; Function u_clock_interrupt
                            983 ; ---------------------------------
   0488                     984 _u_clock_interrupt::
                            985 ;src/lib/utilities.c:279: if (g_clock_on) {
   0488 21r00r00      [10]  986 	ld	hl,#_g_clock_on+0
   048B CB 46         [12]  987 	bit	0, (hl)
   048D C8            [11]  988 	ret	Z
                            989 ;src/lib/utilities.c:286: count = ++count % 6;
   048E 21r01r00      [10]  990 	ld	hl, #_u_clock_interrupt_count_1_315+0
   0491 34            [11]  991 	inc	(hl)
   0492 3E 06         [ 7]  992 	ld	a, #0x06
   0494 F5            [11]  993 	push	af
   0495 33            [ 6]  994 	inc	sp
   0496 3Ar01r00      [13]  995 	ld	a, (_u_clock_interrupt_count_1_315)
   0499 F5            [11]  996 	push	af
   049A 33            [ 6]  997 	inc	sp
   049B CDr00r00      [17]  998 	call	__moduchar
   049E F1            [10]  999 	pop	af
   049F FD 21r01r00   [14] 1000 	ld	iy, #_u_clock_interrupt_count_1_315
   04A3 FD 75 00      [19] 1001 	ld	0 (iy), l
                           1002 ;src/lib/utilities.c:287: if (count == 5) {
   04A6 FD 7E 00      [19] 1003 	ld	a, 0 (iy)
   04A9 D6 05         [ 7] 1004 	sub	a, #0x05
   04AB C0            [11] 1005 	ret	NZ
                           1006 ;src/lib/utilities.c:288: g_clock.ms += 20;
   04AC ED 4Br00r00   [20] 1007 	ld	bc, (#_g_clock + 0)
   04B0 21 14 00      [10] 1008 	ld	hl, #0x0014
   04B3 09            [11] 1009 	add	hl,bc
   04B4 4D            [ 4] 1010 	ld	c, l
   04B5 44            [ 4] 1011 	ld	b, h
   04B6 ED 43r00r00   [20] 1012 	ld	(_g_clock), bc
                           1013 ;src/lib/utilities.c:289: if (g_clock.ms == 1000) {
   04BA 79            [ 4] 1014 	ld	a, c
   04BB D6 E8         [ 7] 1015 	sub	a, #0xe8
   04BD C0            [11] 1016 	ret	NZ
   04BE 78            [ 4] 1017 	ld	a, b
   04BF D6 03         [ 7] 1018 	sub	a, #0x03
   04C1 C0            [11] 1019 	ret	NZ
                           1020 ;src/lib/utilities.c:290: ++g_clock.s;
   04C2 ED 4Br02r00   [20] 1021 	ld	bc, (#(_g_clock + 0x0002) + 0)
   04C6 03            [ 6] 1022 	inc	bc
   04C7 ED 43r02r00   [20] 1023 	ld	((_g_clock + 0x0002)), bc
                           1024 ;src/lib/utilities.c:291: g_clock.ms = 0;
   04CB 21 00 00      [10] 1025 	ld	hl, #0x0000
   04CE 22r00r00      [16] 1026 	ld	(_g_clock), hl
   04D1 C9            [10] 1027 	ret
                           1028 ;src/lib/utilities.c:304: void u_reset_clock(void) {
                           1029 ;	---------------------------------
                           1030 ; Function u_reset_clock
                           1031 ; ---------------------------------
   04D2                    1032 _u_reset_clock::
                           1033 ;src/lib/utilities.c:306: g_clock.ms = g_clock.s = 0;
   04D2 21 00 00      [10] 1034 	ld	hl, #0x0000
   04D5 22r02r00      [16] 1035 	ld	((_g_clock + 0x0002)), hl
   04D8 2E 00         [ 7] 1036 	ld	l, #0x00
   04DA 22r00r00      [16] 1037 	ld	(_g_clock), hl
   04DD C9            [10] 1038 	ret
                           1039 ;src/lib/utilities.c:310: inline bool u_check_collide(const i8 x1, const i8 y1, const i8 x2,
                           1040 ;	---------------------------------
                           1041 ; Function u_check_collide
                           1042 ; ---------------------------------
   04DE                    1043 _u_check_collide::
                           1044 ;src/lib/utilities.c:313: return ((x1 == x2) && (y1 == y2));
   04DE 21 02 00      [10] 1045 	ld	hl, #2+0
   04E1 39            [11] 1046 	add	hl, sp
   04E2 7E            [ 7] 1047 	ld	a, (hl)
   04E3 FD 21 04 00   [14] 1048 	ld	iy, #4
   04E7 FD 39         [15] 1049 	add	iy, sp
   04E9 FD 96 00      [19] 1050 	sub	a, 0 (iy)
   04EC 20 10         [12] 1051 	jr	NZ,00103$
   04EE 21 03 00      [10] 1052 	ld	hl, #3+0
   04F1 39            [11] 1053 	add	hl, sp
   04F2 7E            [ 7] 1054 	ld	a, (hl)
   04F3 FD 21 05 00   [14] 1055 	ld	iy, #5
   04F7 FD 39         [15] 1056 	add	iy, sp
   04F9 FD 96 00      [19] 1057 	sub	a, 0 (iy)
   04FC 28 03         [12] 1058 	jr	Z,00104$
   04FE                    1059 00103$:
   04FE 2E 00         [ 7] 1060 	ld	l, #0x00
   0500 C9            [10] 1061 	ret
   0501                    1062 00104$:
   0501 2E 01         [ 7] 1063 	ld	l, #0x01
   0503 C9            [10] 1064 	ret
                           1065 ;src/lib/utilities.c:317: void u_sort_hiscores(void) {
                           1066 ;	---------------------------------
                           1067 ; Function u_sort_hiscores
                           1068 ; ---------------------------------
   0504                    1069 _u_sort_hiscores::
                           1070 ;src/lib/utilities.c:324: u_quicksort(g_hiscores, n);
   0504 3E 0A         [ 7] 1071 	ld	a, #0x0a
   0506 F5            [11] 1072 	push	af
   0507 33            [ 6] 1073 	inc	sp
   0508 21r00r00      [10] 1074 	ld	hl, #_g_hiscores
   050B E5            [11] 1075 	push	hl
   050C CDr12r05      [17] 1076 	call	_u_quicksort
   050F F1            [10] 1077 	pop	af
   0510 33            [ 6] 1078 	inc	sp
   0511 C9            [10] 1079 	ret
                           1080 ;src/lib/utilities.c:329: static void u_quicksort(score_t *arr, u8 len) {
                           1081 ;	---------------------------------
                           1082 ; Function u_quicksort
                           1083 ; ---------------------------------
   0512                    1084 _u_quicksort:
   0512 DD E5         [15] 1085 	push	ix
   0514 DD 21 00 00   [14] 1086 	ld	ix,#0
   0518 DD 39         [15] 1087 	add	ix,sp
   051A 21 DA FF      [10] 1088 	ld	hl, #-38
   051D 39            [11] 1089 	add	hl, sp
   051E F9            [ 6] 1090 	ld	sp, hl
                           1091 ;src/lib/utilities.c:335: if (len < 2)
   051F DD 7E 06      [19] 1092 	ld	a, 6 (ix)
   0522 D6 02         [ 7] 1093 	sub	a, #0x02
                           1094 ;src/lib/utilities.c:336: return;
   0524 DAr5Dr07      [10] 1095 	jp	C,00114$
                           1096 ;src/lib/utilities.c:338: pivot = arr[len / 2].score;
   0527 DD 4E 06      [19] 1097 	ld	c, 6 (ix)
   052A CB 39         [ 8] 1098 	srl	c
   052C 06 00         [ 7] 1099 	ld	b,#0x00
   052E 69            [ 4] 1100 	ld	l, c
   052F 60            [ 4] 1101 	ld	h, b
   0530 29            [11] 1102 	add	hl, hl
   0531 29            [11] 1103 	add	hl, hl
   0532 29            [11] 1104 	add	hl, hl
   0533 09            [11] 1105 	add	hl, bc
   0534 4D            [ 4] 1106 	ld	c, l
   0535 44            [ 4] 1107 	ld	b, h
   0536 DD 6E 04      [19] 1108 	ld	l,4 (ix)
   0539 DD 66 05      [19] 1109 	ld	h,5 (ix)
   053C 09            [11] 1110 	add	hl, bc
   053D 11 04 00      [10] 1111 	ld	de, #0x0004
   0540 19            [11] 1112 	add	hl, de
   0541 7E            [ 7] 1113 	ld	a, (hl)
   0542 DD 77 E4      [19] 1114 	ld	-28 (ix), a
   0545 23            [ 6] 1115 	inc	hl
   0546 7E            [ 7] 1116 	ld	a, (hl)
   0547 DD 77 E5      [19] 1117 	ld	-27 (ix), a
   054A 23            [ 6] 1118 	inc	hl
   054B 7E            [ 7] 1119 	ld	a, (hl)
   054C DD 77 E6      [19] 1120 	ld	-26 (ix), a
   054F 23            [ 6] 1121 	inc	hl
   0550 7E            [ 7] 1122 	ld	a, (hl)
   0551 DD 77 E7      [19] 1123 	ld	-25 (ix), a
                           1124 ;src/lib/utilities.c:340: for (i = 0, j = len - 1;; i++, j--) {
   0554 DD 36 E3 00   [19] 1125 	ld	-29 (ix), #0x00
   0558 DD 7E 06      [19] 1126 	ld	a, 6 (ix)
   055B C6 FF         [ 7] 1127 	add	a, #0xff
   055D DD 77 FF      [19] 1128 	ld	-1 (ix), a
                           1129 ;src/lib/utilities.c:342: while (arr[i].score < pivot)
   0560 21 00 00      [10] 1130 	ld	hl, #0x0000
   0563 39            [11] 1131 	add	hl, sp
   0564 DD 75 F8      [19] 1132 	ld	-8 (ix), l
   0567 DD 74 F9      [19] 1133 	ld	-7 (ix), h
   056A DD 7E F8      [19] 1134 	ld	a, -8 (ix)
   056D DD 77 EB      [19] 1135 	ld	-21 (ix), a
   0570 DD 7E F9      [19] 1136 	ld	a, -7 (ix)
   0573 DD 77 EC      [19] 1137 	ld	-20 (ix), a
   0576 DD 7E F8      [19] 1138 	ld	a, -8 (ix)
   0579 DD 77 E8      [19] 1139 	ld	-24 (ix), a
   057C DD 7E F9      [19] 1140 	ld	a, -7 (ix)
   057F DD 77 E9      [19] 1141 	ld	-23 (ix), a
   0582                    1142 00103$:
   0582 DD 4E E3      [19] 1143 	ld	c,-29 (ix)
   0585 06 00         [ 7] 1144 	ld	b,#0x00
   0587 69            [ 4] 1145 	ld	l, c
   0588 60            [ 4] 1146 	ld	h, b
   0589 29            [11] 1147 	add	hl, hl
   058A 29            [11] 1148 	add	hl, hl
   058B 29            [11] 1149 	add	hl, hl
   058C 09            [11] 1150 	add	hl, bc
   058D 4D            [ 4] 1151 	ld	c, l
   058E 44            [ 4] 1152 	ld	b, h
   058F DD 7E 04      [19] 1153 	ld	a, 4 (ix)
   0592 81            [ 4] 1154 	add	a, c
   0593 DD 77 FD      [19] 1155 	ld	-3 (ix), a
   0596 DD 7E 05      [19] 1156 	ld	a, 5 (ix)
   0599 88            [ 4] 1157 	adc	a, b
   059A DD 77 FE      [19] 1158 	ld	-2 (ix), a
   059D DD 7E FD      [19] 1159 	ld	a, -3 (ix)
   05A0 C6 04         [ 7] 1160 	add	a, #0x04
   05A2 DD 77 F2      [19] 1161 	ld	-14 (ix), a
   05A5 DD 7E FE      [19] 1162 	ld	a, -2 (ix)
   05A8 CE 00         [ 7] 1163 	adc	a, #0x00
   05AA DD 77 F3      [19] 1164 	ld	-13 (ix), a
   05AD DD 6E F2      [19] 1165 	ld	l,-14 (ix)
   05B0 DD 66 F3      [19] 1166 	ld	h,-13 (ix)
   05B3 4E            [ 7] 1167 	ld	c, (hl)
   05B4 23            [ 6] 1168 	inc	hl
   05B5 46            [ 7] 1169 	ld	b, (hl)
   05B6 23            [ 6] 1170 	inc	hl
   05B7 5E            [ 7] 1171 	ld	e, (hl)
   05B8 23            [ 6] 1172 	inc	hl
   05B9 56            [ 7] 1173 	ld	d, (hl)
                           1174 ;src/lib/utilities.c:343: i++;
   05BA DD 7E E3      [19] 1175 	ld	a, -29 (ix)
   05BD 3C            [ 4] 1176 	inc	a
   05BE DD 77 EA      [19] 1177 	ld	-22 (ix), a
                           1178 ;src/lib/utilities.c:342: while (arr[i].score < pivot)
   05C1 79            [ 4] 1179 	ld	a, c
   05C2 DD 96 E4      [19] 1180 	sub	a, -28 (ix)
   05C5 78            [ 4] 1181 	ld	a, b
   05C6 DD 9E E5      [19] 1182 	sbc	a, -27 (ix)
   05C9 7B            [ 4] 1183 	ld	a, e
   05CA DD 9E E6      [19] 1184 	sbc	a, -26 (ix)
   05CD 7A            [ 4] 1185 	ld	a, d
   05CE DD 9E E7      [19] 1186 	sbc	a, -25 (ix)
   05D1 30 08         [12] 1187 	jr	NC,00120$
                           1188 ;src/lib/utilities.c:343: i++;
   05D3 DD 7E EA      [19] 1189 	ld	a, -22 (ix)
   05D6 DD 77 E3      [19] 1190 	ld	-29 (ix), a
   05D9 18 A7         [12] 1191 	jr	00103$
                           1192 ;src/lib/utilities.c:344: while (arr[j].score > pivot)
   05DB                    1193 00120$:
   05DB DD 7E FF      [19] 1194 	ld	a, -1 (ix)
   05DE DD 77 FA      [19] 1195 	ld	-6 (ix), a
   05E1                    1196 00106$:
   05E1 DD 4E FA      [19] 1197 	ld	c,-6 (ix)
   05E4 06 00         [ 7] 1198 	ld	b,#0x00
   05E6 69            [ 4] 1199 	ld	l, c
   05E7 60            [ 4] 1200 	ld	h, b
   05E8 29            [11] 1201 	add	hl, hl
   05E9 29            [11] 1202 	add	hl, hl
   05EA 29            [11] 1203 	add	hl, hl
   05EB 09            [11] 1204 	add	hl, bc
   05EC 4D            [ 4] 1205 	ld	c, l
   05ED 44            [ 4] 1206 	ld	b, h
   05EE DD 7E 04      [19] 1207 	ld	a, 4 (ix)
   05F1 81            [ 4] 1208 	add	a, c
   05F2 DD 77 FB      [19] 1209 	ld	-5 (ix), a
   05F5 DD 7E 05      [19] 1210 	ld	a, 5 (ix)
   05F8 88            [ 4] 1211 	adc	a, b
   05F9 DD 77 FC      [19] 1212 	ld	-4 (ix), a
   05FC DD 7E FB      [19] 1213 	ld	a, -5 (ix)
   05FF C6 04         [ 7] 1214 	add	a, #0x04
   0601 DD 77 F0      [19] 1215 	ld	-16 (ix), a
   0604 DD 7E FC      [19] 1216 	ld	a, -4 (ix)
   0607 CE 00         [ 7] 1217 	adc	a, #0x00
   0609 DD 77 F1      [19] 1218 	ld	-15 (ix), a
   060C DD 5E F0      [19] 1219 	ld	e,-16 (ix)
   060F DD 56 F1      [19] 1220 	ld	d,-15 (ix)
   0612 21 1A 00      [10] 1221 	ld	hl, #0x001a
   0615 39            [11] 1222 	add	hl, sp
   0616 EB            [ 4] 1223 	ex	de, hl
   0617 01 04 00      [10] 1224 	ld	bc, #0x0004
   061A ED B0         [21] 1225 	ldir
                           1226 ;src/lib/utilities.c:345: j--;
   061C DD 7E FA      [19] 1227 	ld	a, -6 (ix)
   061F C6 FF         [ 7] 1228 	add	a, #0xff
   0621 DD 77 EF      [19] 1229 	ld	-17 (ix), a
                           1230 ;src/lib/utilities.c:344: while (arr[j].score > pivot)
   0624 DD 7E E4      [19] 1231 	ld	a, -28 (ix)
   0627 DD 96 F4      [19] 1232 	sub	a, -12 (ix)
   062A DD 7E E5      [19] 1233 	ld	a, -27 (ix)
   062D DD 9E F5      [19] 1234 	sbc	a, -11 (ix)
   0630 DD 7E E6      [19] 1235 	ld	a, -26 (ix)
   0633 DD 9E F6      [19] 1236 	sbc	a, -10 (ix)
   0636 DD 7E E7      [19] 1237 	ld	a, -25 (ix)
   0639 DD 9E F7      [19] 1238 	sbc	a, -9 (ix)
   063C 30 08         [12] 1239 	jr	NC,00108$
                           1240 ;src/lib/utilities.c:345: j--;
   063E DD 7E EF      [19] 1241 	ld	a, -17 (ix)
   0641 DD 77 FA      [19] 1242 	ld	-6 (ix), a
   0644 18 9B         [12] 1243 	jr	00106$
   0646                    1244 00108$:
                           1245 ;src/lib/utilities.c:347: if (i >= j)
   0646 DD 7E E3      [19] 1246 	ld	a, -29 (ix)
   0649 DD 96 FA      [19] 1247 	sub	a, -6 (ix)
   064C D2r37r07      [10] 1248 	jp	NC, 00111$
                           1249 ;src/lib/utilities.c:350: temp.score = arr[i].score;
   064F DD 7E F8      [19] 1250 	ld	a, -8 (ix)
   0652 C6 04         [ 7] 1251 	add	a, #0x04
   0654 DD 77 F4      [19] 1252 	ld	-12 (ix), a
   0657 DD 7E F9      [19] 1253 	ld	a, -7 (ix)
   065A CE 00         [ 7] 1254 	adc	a, #0x00
   065C DD 77 F5      [19] 1255 	ld	-11 (ix), a
   065F DD 6E F2      [19] 1256 	ld	l,-14 (ix)
   0662 DD 66 F3      [19] 1257 	ld	h,-13 (ix)
   0665 4E            [ 7] 1258 	ld	c, (hl)
   0666 23            [ 6] 1259 	inc	hl
   0667 46            [ 7] 1260 	ld	b, (hl)
   0668 23            [ 6] 1261 	inc	hl
   0669 5E            [ 7] 1262 	ld	e, (hl)
   066A 23            [ 6] 1263 	inc	hl
   066B 56            [ 7] 1264 	ld	d, (hl)
   066C DD 6E F4      [19] 1265 	ld	l,-12 (ix)
   066F DD 66 F5      [19] 1266 	ld	h,-11 (ix)
   0672 71            [ 7] 1267 	ld	(hl), c
   0673 23            [ 6] 1268 	inc	hl
   0674 70            [ 7] 1269 	ld	(hl), b
   0675 23            [ 6] 1270 	inc	hl
   0676 73            [ 7] 1271 	ld	(hl), e
   0677 23            [ 6] 1272 	inc	hl
   0678 72            [ 7] 1273 	ld	(hl), d
                           1274 ;src/lib/utilities.c:351: temp.width = arr[i].width;
   0679 DD 7E F8      [19] 1275 	ld	a, -8 (ix)
   067C C6 08         [ 7] 1276 	add	a, #0x08
   067E DD 77 ED      [19] 1277 	ld	-19 (ix), a
   0681 DD 7E F9      [19] 1278 	ld	a, -7 (ix)
   0684 CE 00         [ 7] 1279 	adc	a, #0x00
   0686 DD 77 EE      [19] 1280 	ld	-18 (ix), a
   0689 FD 21 08 00   [14] 1281 	ld	iy, #0x0008
   068D DD 5E FD      [19] 1282 	ld	e,-3 (ix)
   0690 DD 56 FE      [19] 1283 	ld	d,-2 (ix)
   0693 FD 19         [15] 1284 	add	iy, de
   0695 FD 4E 00      [19] 1285 	ld	c, 0 (iy)
   0698 DD 6E ED      [19] 1286 	ld	l,-19 (ix)
   069B DD 66 EE      [19] 1287 	ld	h,-18 (ix)
   069E 71            [ 7] 1288 	ld	(hl), c
                           1289 ;src/lib/utilities.c:352: strcpy(temp.initials, arr[i].initials);
   069F DD 5E EB      [19] 1290 	ld	e,-21 (ix)
   06A2 DD 56 EC      [19] 1291 	ld	d,-20 (ix)
   06A5 DD 6E FD      [19] 1292 	ld	l,-3 (ix)
   06A8 DD 66 FE      [19] 1293 	ld	h,-2 (ix)
   06AB AF            [ 4] 1294 	xor	a, a
   06AC                    1295 00141$:
   06AC BE            [ 7] 1296 	cp	a, (hl)
   06AD ED A0         [16] 1297 	ldi
   06AF 20 FB         [12] 1298 	jr	NZ, 00141$
                           1299 ;src/lib/utilities.c:353: arr[i].score = arr[j].score;
   06B1 DD 6E F0      [19] 1300 	ld	l,-16 (ix)
   06B4 DD 66 F1      [19] 1301 	ld	h,-15 (ix)
   06B7 4E            [ 7] 1302 	ld	c, (hl)
   06B8 23            [ 6] 1303 	inc	hl
   06B9 46            [ 7] 1304 	ld	b, (hl)
   06BA 23            [ 6] 1305 	inc	hl
   06BB 5E            [ 7] 1306 	ld	e, (hl)
   06BC 23            [ 6] 1307 	inc	hl
   06BD 56            [ 7] 1308 	ld	d, (hl)
   06BE DD 6E F2      [19] 1309 	ld	l,-14 (ix)
   06C1 DD 66 F3      [19] 1310 	ld	h,-13 (ix)
   06C4 71            [ 7] 1311 	ld	(hl), c
   06C5 23            [ 6] 1312 	inc	hl
   06C6 70            [ 7] 1313 	ld	(hl), b
   06C7 23            [ 6] 1314 	inc	hl
   06C8 73            [ 7] 1315 	ld	(hl), e
   06C9 23            [ 6] 1316 	inc	hl
   06CA 72            [ 7] 1317 	ld	(hl), d
                           1318 ;src/lib/utilities.c:354: arr[i].width = arr[j].width;
   06CB DD 7E FB      [19] 1319 	ld	a, -5 (ix)
   06CE C6 08         [ 7] 1320 	add	a, #0x08
   06D0 4F            [ 4] 1321 	ld	c, a
   06D1 DD 7E FC      [19] 1322 	ld	a, -4 (ix)
   06D4 CE 00         [ 7] 1323 	adc	a, #0x00
   06D6 47            [ 4] 1324 	ld	b, a
   06D7 0A            [ 7] 1325 	ld	a, (bc)
   06D8 FD 77 00      [19] 1326 	ld	0 (iy), a
                           1327 ;src/lib/utilities.c:355: strcpy(arr[i].initials, arr[j].initials);
   06DB DD 5E FD      [19] 1328 	ld	e,-3 (ix)
   06DE DD 56 FE      [19] 1329 	ld	d,-2 (ix)
   06E1 DD 6E FB      [19] 1330 	ld	l,-5 (ix)
   06E4 DD 66 FC      [19] 1331 	ld	h,-4 (ix)
   06E7 C5            [11] 1332 	push	bc
   06E8 AF            [ 4] 1333 	xor	a, a
   06E9                    1334 00142$:
   06E9 BE            [ 7] 1335 	cp	a, (hl)
   06EA ED A0         [16] 1336 	ldi
   06EC 20 FB         [12] 1337 	jr	NZ, 00142$
   06EE DD 5E F4      [19] 1338 	ld	e,-12 (ix)
   06F1 DD 56 F5      [19] 1339 	ld	d,-11 (ix)
   06F4 21 1C 00      [10] 1340 	ld	hl, #0x001c
   06F7 39            [11] 1341 	add	hl, sp
   06F8 EB            [ 4] 1342 	ex	de, hl
   06F9 01 04 00      [10] 1343 	ld	bc, #0x0004
   06FC ED B0         [21] 1344 	ldir
   06FE DD 5E F0      [19] 1345 	ld	e,-16 (ix)
   0701 DD 56 F1      [19] 1346 	ld	d,-15 (ix)
   0704 21 1C 00      [10] 1347 	ld	hl, #0x001c
   0707 39            [11] 1348 	add	hl, sp
   0708 01 04 00      [10] 1349 	ld	bc, #0x0004
   070B ED B0         [21] 1350 	ldir
   070D C1            [10] 1351 	pop	bc
                           1352 ;src/lib/utilities.c:357: arr[j].width = temp.width;
   070E DD 6E ED      [19] 1353 	ld	l,-19 (ix)
   0711 DD 66 EE      [19] 1354 	ld	h,-18 (ix)
   0714 7E            [ 7] 1355 	ld	a, (hl)
   0715 02            [ 7] 1356 	ld	(bc), a
                           1357 ;src/lib/utilities.c:358: strcpy(arr[j].initials, temp.initials);
   0716 DD 5E FB      [19] 1358 	ld	e,-5 (ix)
   0719 DD 56 FC      [19] 1359 	ld	d,-4 (ix)
   071C DD 6E E8      [19] 1360 	ld	l,-24 (ix)
   071F DD 66 E9      [19] 1361 	ld	h,-23 (ix)
   0722 AF            [ 4] 1362 	xor	a, a
   0723                    1363 00143$:
   0723 BE            [ 7] 1364 	cp	a, (hl)
   0724 ED A0         [16] 1365 	ldi
   0726 20 FB         [12] 1366 	jr	NZ, 00143$
                           1367 ;src/lib/utilities.c:340: for (i = 0, j = len - 1;; i++, j--) {
   0728 DD 7E EA      [19] 1368 	ld	a, -22 (ix)
   072B DD 77 E3      [19] 1369 	ld	-29 (ix), a
   072E DD 7E EF      [19] 1370 	ld	a, -17 (ix)
   0731 DD 77 FF      [19] 1371 	ld	-1 (ix), a
   0734 C3r82r05      [10] 1372 	jp	00103$
   0737                    1373 00111$:
                           1374 ;src/lib/utilities.c:361: u_quicksort(arr, i);
   0737 DD 7E E3      [19] 1375 	ld	a, -29 (ix)
   073A F5            [11] 1376 	push	af
   073B 33            [ 6] 1377 	inc	sp
   073C DD 6E 04      [19] 1378 	ld	l,4 (ix)
   073F DD 66 05      [19] 1379 	ld	h,5 (ix)
   0742 E5            [11] 1380 	push	hl
   0743 CDr12r05      [17] 1381 	call	_u_quicksort
   0746 F1            [10] 1382 	pop	af
   0747 33            [ 6] 1383 	inc	sp
                           1384 ;src/lib/utilities.c:362: u_quicksort(arr + i, len - i);
   0748 DD 7E 06      [19] 1385 	ld	a, 6 (ix)
   074B DD 96 E3      [19] 1386 	sub	a, -29 (ix)
   074E 47            [ 4] 1387 	ld	b, a
   074F C5            [11] 1388 	push	bc
   0750 33            [ 6] 1389 	inc	sp
   0751 DD 6E FD      [19] 1390 	ld	l,-3 (ix)
   0754 DD 66 FE      [19] 1391 	ld	h,-2 (ix)
   0757 E5            [11] 1392 	push	hl
   0758 CDr12r05      [17] 1393 	call	_u_quicksort
   075B F1            [10] 1394 	pop	af
   075C 33            [ 6] 1395 	inc	sp
   075D                    1396 00114$:
   075D DD F9         [10] 1397 	ld	sp, ix
   075F DD E1         [14] 1398 	pop	ix
   0761 C9            [10] 1399 	ret
                           1400 ;src/lib/utilities.c:366: static void u_sort_swap(score_t *h1, score_t *h2) {
                           1401 ;	---------------------------------
                           1402 ; Function u_sort_swap
                           1403 ; ---------------------------------
   0762                    1404 _u_sort_swap:
                           1405 ;src/lib/utilities.c:370: h2 = temp;
   0762 C9            [10] 1406 	ret
                           1407 ;src/lib/utilities.c:374: static int u_qsort_compare(const void *h1, const void *h2) {
                           1408 ;	---------------------------------
                           1409 ; Function u_qsort_compare
                           1410 ; ---------------------------------
   0763                    1411 _u_qsort_compare:
                           1412 ;src/lib/utilities.c:391: return 0;
   0763 21 00 00      [10] 1413 	ld	hl, #0x0000
   0766 C9            [10] 1414 	ret
                           1415 	.area _CODE
                           1416 	.area _INITIALIZER
   0000                    1417 __xinit__g_clock:
   0000 00 00              1418 	.dw #0x0000
   0002 00 00              1419 	.dw #0x0000
                           1420 	.area _CABS (ABS)
